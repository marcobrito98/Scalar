# Schedule definitions for thorn ScalarEvolve
# $Header:$

if (CCTK_EQUALS (evolution_method, "ScalarEvolve")) {

  STORAGE: rhs_phi rhs_Kphi
  STORAGE: hmetric conf_fac_chi trk

  schedule Scalar_InitSymBound at BASEGRID
  {
    LANG: Fortran
    OPTIONS: META
  } "Schedule symmetries"

  schedule Scalar_RegisterVars in MoL_Register
  {
    LANG: C
    OPTIONS: META
  } "Register variables for MoL"

  schedule Scalar_ord4_calc_rhs IN MoL_CalcRHS AS Scalar_CalcRHS
  {
    LANG: Fortran
  } "Register RHS calculation for MoL"

  schedule Scalar_ord4_calc_rhs_bdry in MoL_CalcRHS as Scalar_CalcRHS_Bdry \
           after Scalar_CalcRHS
  {
    LANG: Fortran
  } "Register boundary RHS calculation for MoL"


  schedule Scalar_Boundaries in MoL_PostStep
  {
    LANG: Fortran
    OPTIONS: LEVEL
    SYNC: phi
    SYNC: Kphi
  } "Register boundary enforcement in MoL"

  schedule GROUP ApplyBCs as Scalar_ApplyBCs in MoL_PostStep after Scalar_Boundaries
  {
  } "Apply boundary conditions"


  schedule Scalar_calc_Tmunu in AddToTmunu as Scalar_AddToTmunu
  {
    LANG: Fortran
  } "Compute the energy-momentum tensor"

}
